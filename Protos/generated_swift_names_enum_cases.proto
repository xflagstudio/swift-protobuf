// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package protobuf_unittest_generated;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  adjusted = 1;
  allCases = 2;
  allocate = 3;
  alwaysPrintEnumsAsInts = 4;
  alwaysPrintFieldsWithDefaultValues = 5;
  any = 6;
  AnyExtensionField = 7;
  AnyMessageExtension = 8;
  AnyMessageStorage = 9;
  AnyUnpackError = 10;
  Api = 11;
  appended = 12;
  appendUIntHex = 13;
  appendUnknown = 14;
  areAllInitialized = 15;
  array = 16;
  arrayLiteral = 17;
  arraySeparator = 18;
  as = 19;
  asciiOpenCurlyBracket = 20;
  asciiZero = 21;
  assumingMemoryBound = 22;
  available = 23;
  b = 24;
  base64Values = 25;
  baseAddress = 26;
  BaseType = 27;
  binary = 28;
  BinaryDecoder = 29;
  BinaryDecodingError = 30;
  BinaryDecodingOptions = 31;
  BinaryDelimited = 32;
  BinaryEncoder = 33;
  BinaryEncodingError = 34;
  BinaryEncodingMessageSetSizeVisitor = 35;
  BinaryEncodingMessageSetVisitor = 36;
  BinaryEncodingSizeVisitor = 37;
  BinaryEncodingVisitor = 38;
  body = 39;
  bodySize = 40;
  Bool = 41;
  booleanLiteral = 42;
  BooleanLiteralType = 43;
  boolValue = 44;
  buffer = 45;
  bytes = 46;
  bytesInGroup = 47;
  bytesRead = 48;
  BytesValue = 49;
  c = 50;
  capacity = 51;
  capitalizeNext = 52;
  cardinality = 53;
  Character = 54;
  chars = 55;
  class = 56;
  clearExtensionValue = 57;
  clearSourceContext = 58;
  clearValue = 59;
  codeUnits = 60;
  Collection = 61;
  com = 62;
  comma = 63;
  contentsOf = 64;
  count = 65;
  countVarintsInBuffer = 66;
  customCodable = 67;
  CustomDebugStringConvertible = 68;
  d = 69;
  Data = 70;
  dataResult = 71;
  dataSize = 72;
  date = 73;
  daySec = 74;
  daysSinceEpoch = 75;
  debugDescription = 76;
  decoded = 77;
  decodedFromJSONNull = 78;
  decodeExtensionField = 79;
  decodeExtensionFieldsAsMessageSet = 80;
  decodeJSON = 81;
  decodeMapField = 82;
  decodeMessage = 83;
  decoder = 84;
  decodeRepeated = 85;
  decodeRepeatedBoolField = 86;
  decodeRepeatedBytesField = 87;
  decodeRepeatedDoubleField = 88;
  decodeRepeatedEnumField = 89;
  decodeRepeatedFixed32Field = 90;
  decodeRepeatedFixed64Field = 91;
  decodeRepeatedFloatField = 92;
  decodeRepeatedGroupField = 93;
  decodeRepeatedInt32Field = 94;
  decodeRepeatedInt64Field = 95;
  decodeRepeatedMessageField = 96;
  decodeRepeatedSFixed32Field = 97;
  decodeRepeatedSFixed64Field = 98;
  decodeRepeatedSInt32Field = 99;
  decodeRepeatedSInt64Field = 100;
  decodeRepeatedStringField = 101;
  decodeRepeatedUInt32Field = 102;
  decodeRepeatedUInt64Field = 103;
  decodeSingular = 104;
  decodeSingularBoolField = 105;
  decodeSingularBytesField = 106;
  decodeSingularDoubleField = 107;
  decodeSingularEnumField = 108;
  decodeSingularFixed32Field = 109;
  decodeSingularFixed64Field = 110;
  decodeSingularFloatField = 111;
  decodeSingularGroupField = 112;
  decodeSingularInt32Field = 113;
  decodeSingularInt64Field = 114;
  decodeSingularMessageField = 115;
  decodeSingularSFixed32Field = 116;
  decodeSingularSFixed64Field = 117;
  decodeSingularSInt32Field = 118;
  decodeSingularSInt64Field = 119;
  decodeSingularStringField = 120;
  decodeSingularUInt32Field = 121;
  decodeSingularUInt64Field = 122;
  decodeTextFormat = 123;
  defaultAnyTypeURLPrefix = 124;
  defaultValue = 125;
  description = 126;
  Dictionary = 127;
  dictionaryLiteral = 128;
  digit = 129;
  digit0 = 130;
  digit1 = 131;
  digitCount = 132;
  digits = 133;
  digitValue = 134;
  discardableResult = 135;
  discardUnknownFields = 136;
  distance = 137;
  double = 138;
  doubleToUtf8 = 139;
  DoubleValue = 140;
  Duration = 141;
  E = 142;
  Element = 143;
  elements = 144;
  emitExtensionFieldName = 145;
  emitFieldName = 146;
  emitFieldNumber = 147;
  Empty = 148;
  emptyData = 149;
  encoded = 150;
  encodedJSONString = 151;
  encodedSize = 152;
  encodeField = 153;
  encoder = 154;
  end = 155;
  endArray = 156;
  endMessageField = 157;
  endObject = 158;
  endRegularField = 159;
  enum = 160;
  enumvalue = 161;
  Equatable = 162;
  Error = 163;
  ExpressibleByArrayLiteral = 164;
  ExpressibleByDictionaryLiteral = 165;
  ext = 166;
  extDecoder = 167;
  extendedGraphemeClusterLiteral = 168;
  ExtendedGraphemeClusterLiteralType = 169;
  ExtensibleMessage = 170;
  ExtensionField = 171;
  extensionFieldNumber = 172;
  ExtensionFieldValueSet = 173;
  ExtensionMap = 174;
  extensions = 175;
  extras = 176;
  f = 177;
  false = 178;
  field = 179;
  fieldData = 180;
  FieldMask = 181;
  fieldName = 182;
  fieldNameCount = 183;
  fieldNum = 184;
  fieldNumber = 185;
  fieldNumberForProto = 186;
  fields = 187;
  fieldSize = 188;
  FieldTag = 189;
  fieldType = 190;
  fieldValue = 191;
  fileName = 192;
  filter = 193;
  firstItem = 194;
  float = 195;
  floatLiteral = 196;
  FloatLiteralType = 197;
  floatToUtf8 = 198;
  FloatValue = 199;
  forMessageName = 200;
  formUnion = 201;
  forReadingFrom = 202;
  forTypeURL = 203;
  ForwardParser = 204;
  forWritingInto = 205;
  from = 206;
  fromAscii2 = 207;
  fromAscii4 = 208;
  fromHexDigit = 209;
  func = 210;
  G = 211;
  get = 212;
  getExtensionValue = 213;
  googleapis = 214;
  Google_Protobuf_Any = 215;
  Google_Protobuf_Api = 216;
  Google_Protobuf_BoolValue = 217;
  Google_Protobuf_BytesValue = 218;
  Google_Protobuf_DoubleValue = 219;
  Google_Protobuf_Duration = 220;
  Google_Protobuf_Empty = 221;
  Google_Protobuf_Enum = 222;
  Google_Protobuf_EnumValue = 223;
  Google_Protobuf_Field = 224;
  Google_Protobuf_FieldMask = 225;
  Google_Protobuf_FloatValue = 226;
  Google_Protobuf_Int32Value = 227;
  Google_Protobuf_Int64Value = 228;
  Google_Protobuf_ListValue = 229;
  Google_Protobuf_Method = 230;
  Google_Protobuf_Mixin = 231;
  Google_Protobuf_NullValue = 232;
  Google_Protobuf_Option = 233;
  Google_Protobuf_SourceContext = 234;
  Google_Protobuf_StringValue = 235;
  Google_Protobuf_Struct = 236;
  Google_Protobuf_Syntax = 237;
  Google_Protobuf_Timestamp = 238;
  Google_Protobuf_Type = 239;
  Google_Protobuf_UInt32Value = 240;
  Google_Protobuf_UInt64Value = 241;
  Google_Protobuf_Value = 242;
  group = 243;
  groupSize = 244;
  h = 245;
  handleConflictingOneOf = 246;
  hasExtensionValue = 247;
  hash = 248;
  Hashable = 249;
  hasher = 250;
  hashValue = 251;
  HashVisitor = 252;
  hasSourceContext = 253;
  hasValue = 254;
  hour = 255;
  i = 256;
  ignoreUnknownFields = 257;
  index = 258;
  init = 259;
  inout = 260;
  insert = 261;
  Int = 262;
  Int32 = 263;
  Int32Value = 264;
  Int64 = 265;
  Int64Value = 266;
  Int8 = 267;
  integerLiteral = 268;
  IntegerLiteralType = 269;
  intern = 270;
  Internal = 271;
  InternalState = 272;
  into = 273;
  ints = 274;
  isA = 275;
  isDefaultValue = 276;
  isEqual = 277;
  isEqualTo = 278;
  isInitialized = 279;
  itemTagsEncodedSize = 280;
  i_2166136261 = 281;
  JSONDecoder = 282;
  JSONDecodingError = 283;
  JSONDecodingOptions = 284;
  jsonEncoder = 285;
  JSONEncodingError = 286;
  JSONEncodingOptions = 287;
  JSONEncodingVisitor = 288;
  JSONMapEncodingVisitor = 289;
  jsonName = 290;
  jsonPath = 291;
  jsonPaths = 292;
  JSONScanner = 293;
  jsonString = 294;
  jsonText = 295;
  jsonUTF8Data = 296;
  k = 297;
  Key = 298;
  keyField = 299;
  KeyType = 300;
  kind = 301;
  l = 302;
  length = 303;
  let = 304;
  lhs = 305;
  list = 306;
  listOfMessages = 307;
  listValue = 308;
  littleEndian = 309;
  littleEndianBytes = 310;
  localHasher = 311;
  M = 312;
  major = 313;
  makeIterator = 314;
  mapHash = 315;
  MapKeyType = 316;
  mapNameResolver = 317;
  mapToMessages = 318;
  MapValueType = 319;
  mapVisitor = 320;
  mdayStart = 321;
  merge = 322;
  message = 323;
  messageDepthLimit = 324;
  MessageExtension = 325;
  MessageImplementationBase = 326;
  MessageSet = 327;
  messageType = 328;
  Method = 329;
  methods = 330;
  minor = 331;
  Mixin = 332;
  mixins = 333;
  month = 334;
  msgExtension = 335;
  mutating = 336;
  n = 337;
  name = 338;
  NameDescription = 339;
  NameMap = 340;
  nameResolver = 341;
  names = 342;
  nanos = 343;
  nativeBytes = 344;
  nativeEndianBytes = 345;
  newL = 346;
  newList = 347;
  newValue = 348;
  nextByte = 349;
  nextFieldNumber = 350;
  nil = 351;
  nilLiteral = 352;
  nullValue = 353;
  number = 354;
  numberValue = 355;
  of = 356;
  oneofIndex = 357;
  oneofs = 358;
  OneOf_Kind = 359;
  Option = 360;
  OptionalEnumExtensionField = 361;
  OptionalExtensionField = 362;
  OptionalGroupExtensionField = 363;
  OptionalMessageExtensionField = 364;
  options = 365;
  other = 366;
  others = 367;
  out = 368;
  p = 369;
  packed = 370;
  PackedEnumExtensionField = 371;
  PackedExtensionField = 372;
  packedSize = 373;
  padding = 374;
  parent = 375;
  parse = 376;
  partial = 377;
  path = 378;
  paths = 379;
  payload = 380;
  payloadSize = 381;
  pointer = 382;
  pos = 383;
  prefix = 384;
  preserveProtoFieldNames = 385;
  preTraverse = 386;
  printUnknownFields = 387;
  proto2 = 388;
  proto3DefaultValue = 389;
  ProtobufAPIVersionCheck = 390;
  ProtobufAPIVersion_2 = 391;
  ProtobufBool = 392;
  ProtobufBytes = 393;
  ProtobufDouble = 394;
  ProtobufEnumMap = 395;
  protobufExtension = 396;
  ProtobufFixed32 = 397;
  ProtobufFixed64 = 398;
  ProtobufFloat = 399;
  ProtobufInt32 = 400;
  ProtobufInt64 = 401;
  ProtobufMap = 402;
  ProtobufMessageMap = 403;
  ProtobufSFixed32 = 404;
  ProtobufSFixed64 = 405;
  ProtobufSInt32 = 406;
  ProtobufSInt64 = 407;
  ProtobufString = 408;
  ProtobufUInt32 = 409;
  ProtobufUInt64 = 410;
  protobuf_extensionFieldValues = 411;
  protobuf_fieldNumber = 412;
  protobuf_generated_isEqualTo = 413;
  protobuf_nameMap = 414;
  protobuf_newField = 415;
  protobuf_package = 416;
  protocol = 417;
  protoFieldName = 418;
  protoMessageName = 419;
  ProtoNameProviding = 420;
  protoPaths = 421;
  public = 422;
  putBoolValue = 423;
  putBytesValue = 424;
  putDoubleValue = 425;
  putEnumValue = 426;
  putFixedUInt32 = 427;
  putFixedUInt64 = 428;
  putFloatValue = 429;
  putInt64 = 430;
  putStringValue = 431;
  putUInt64 = 432;
  putUInt64Hex = 433;
  putVarInt = 434;
  putZigZagVarInt = 435;
  rawChars = 436;
  RawRepresentable = 437;
  RawValue = 438;
  readBuffer = 439;
  register = 440;
  RepeatedEnumExtensionField = 441;
  RepeatedExtensionField = 442;
  RepeatedGroupExtensionField = 443;
  RepeatedMessageExtensionField = 444;
  requestStreaming = 445;
  requestTypeURL = 446;
  requiredSize = 447;
  responseStreaming = 448;
  responseTypeURL = 449;
  result = 450;
  rethrows = 451;
  return = 452;
  revision = 453;
  rhs = 454;
  root = 455;
  s = 456;
  sawBackslash = 457;
  sawSection4Characters = 458;
  sawSection5Characters = 459;
  scanner = 460;
  seconds = 461;
  self = 462;
  separator = 463;
  serialize = 464;
  serializedData = 465;
  serializedSize = 466;
  set = 467;
  setExtensionValue = 468;
  shift = 469;
  SimpleExtensionMap = 470;
  sizer = 471;
  source = 472;
  sourceContext = 473;
  sourceEncoding = 474;
  split = 475;
  start = 476;
  startArray = 477;
  startField = 478;
  startIndex = 479;
  startMessageField = 480;
  startObject = 481;
  startRegularField = 482;
  state = 483;
  static = 484;
  StaticString = 485;
  storage = 486;
  String = 487;
  stringLiteral = 488;
  StringLiteralType = 489;
  stringResult = 490;
  stringValue = 491;
  struct = 492;
  structValue = 493;
  subDecoder = 494;
  subscript = 495;
  subVisitor = 496;
  Swift = 497;
  SwiftProtobuf = 498;
  syntax = 499;
  T = 500;
  tag = 501;
  terminator = 502;
  testDecoder = 503;
  text = 504;
  textDecoder = 505;
  TextFormatDecoder = 506;
  TextFormatDecodingError = 507;
  TextFormatEncodingOptions = 508;
  TextFormatEncodingVisitor = 509;
  textFormatString = 510;
  throws = 511;
  timeInterval = 512;
  timeIntervalSince1970 = 513;
  timeIntervalSinceReferenceDate = 514;
  Timestamp = 515;
  to = 516;
  total = 517;
  totalSize = 518;
  traverse = 519;
  true = 520;
  try = 521;
  type = 522;
  typealias = 523;
  typePrefix = 524;
  typeStart = 525;
  typeUnknown = 526;
  typeURL = 527;
  UInt32 = 528;
  UInt32Value = 529;
  UInt64 = 530;
  UInt64Value = 531;
  UInt8 = 532;
  unicodeScalarLiteral = 533;
  UnicodeScalarLiteralType = 534;
  unicodeScalars = 535;
  UnicodeScalarView = 536;
  union = 537;
  uniqueStorage = 538;
  unknown = 539;
  unknownFields = 540;
  UnknownStorage = 541;
  unpackTo = 542;
  UnsafeBufferPointer = 543;
  UnsafeMutablePointer = 544;
  UnsafeMutableRawBufferPointer = 545;
  UnsafePointer = 546;
  UnsafeRawBufferPointer = 547;
  updatedOptions = 548;
  url = 549;
  utf8 = 550;
  utf8ToDouble = 551;
  UTF8View = 552;
  v = 553;
  value = 554;
  valueField = 555;
  values = 556;
  ValueType = 557;
  var = 558;
  Version = 559;
  versionString = 560;
  visitExtensionFields = 561;
  visitExtensionFieldsAsMessageSet = 562;
  visitMapField = 563;
  visitor = 564;
  visitPacked = 565;
  visitPackedBoolField = 566;
  visitPackedDoubleField = 567;
  visitPackedEnumField = 568;
  visitPackedFixed32Field = 569;
  visitPackedFixed64Field = 570;
  visitPackedFloatField = 571;
  visitPackedInt32Field = 572;
  visitPackedInt64Field = 573;
  visitPackedSFixed32Field = 574;
  visitPackedSFixed64Field = 575;
  visitPackedSInt32Field = 576;
  visitPackedSInt64Field = 577;
  visitPackedUInt32Field = 578;
  visitPackedUInt64Field = 579;
  visitRepeated = 580;
  visitRepeatedBoolField = 581;
  visitRepeatedBytesField = 582;
  visitRepeatedDoubleField = 583;
  visitRepeatedEnumField = 584;
  visitRepeatedFixed32Field = 585;
  visitRepeatedFixed64Field = 586;
  visitRepeatedFloatField = 587;
  visitRepeatedGroupField = 588;
  visitRepeatedInt32Field = 589;
  visitRepeatedInt64Field = 590;
  visitRepeatedMessageField = 591;
  visitRepeatedSFixed32Field = 592;
  visitRepeatedSFixed64Field = 593;
  visitRepeatedSInt32Field = 594;
  visitRepeatedSInt64Field = 595;
  visitRepeatedStringField = 596;
  visitRepeatedUInt32Field = 597;
  visitRepeatedUInt64Field = 598;
  visitSingular = 599;
  visitSingularBoolField = 600;
  visitSingularBytesField = 601;
  visitSingularDoubleField = 602;
  visitSingularEnumField = 603;
  visitSingularFixed32Field = 604;
  visitSingularFixed64Field = 605;
  visitSingularFloatField = 606;
  visitSingularGroupField = 607;
  visitSingularInt32Field = 608;
  visitSingularInt64Field = 609;
  visitSingularMessageField = 610;
  visitSingularSFixed32Field = 611;
  visitSingularSFixed64Field = 612;
  visitSingularSInt32Field = 613;
  visitSingularSInt64Field = 614;
  visitSingularStringField = 615;
  visitSingularUInt32Field = 616;
  visitSingularUInt64Field = 617;
  visitUnknown = 618;
  wasDecoded = 619;
  where = 620;
  wireFormat = 621;
  with = 622;
  withUnsafeBytes = 623;
  withUnsafeMutableBytes = 624;
  WrappedType = 625;
  written = 626;
  yday = 627;
}
